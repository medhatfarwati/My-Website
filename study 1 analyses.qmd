---
editor: visual
format: html
---

# Overview

This page presents key findings from our study analyses based on the NHANES dataset.

## A. Data Cleaning and Preparation

```{r, warning=FALSE, message=FALSE}
library(haven)
library(tidyverse)
library(broom)

```

```{r}

P_TRIGLY_data <- read_xpt("C:/Users/medha/OneDrive/Desktop/CRSP 431/Project B/Dashboard Blog/P_TRIGLY.xpt") %>%
  as_tibble()


```

```{r}
# Create 'data' directory if it doesn't exist
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(P_TRIGLY_data, "data/P_TRIGLY.Rds")

```

```{r}
ldl_raw <- readRDS("data/P_TRIGLY.Rds")
```

```{r}
P_DEMO_data <- read_xpt("C:/Users/medha/OneDrive/Desktop/CRSP 431/Project B/Dashboard Blog/P_DEMO.xpt") %>%
  as_tibble()

# Create 'data' directory if it doesn't exist
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(P_DEMO_data, "data/P_DEMO.Rds")

demo_raw <- readRDS("data/P_DEMO.Rds")

```

```{r}
P_BMX_data <- read_xpt("C:/Users/medha/OneDrive/Desktop/CRSP 431/Project B/Dashboard Blog/P_BMX.xpt") %>%
  as_tibble()

# Create 'data' directory if it doesn't exist
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(P_BMX_data, "data/P_BMX.Rds")

bmi_raw <- readRDS("data/P_BMX.Rds")
```

```{r}
NEW <- left_join(demo_raw, ldl_raw, by = "SEQN")
```

```{r}
NEW2 <- left_join(NEW, bmi_raw, by = "SEQN")
```

```{r}
# Rename the dataset
combined_data <- NEW2


```

```{r}
# Load necessary libraries
library(tidyverse)

# Filter the dataset
combined_data <- combined_data %>%
  filter(RIDSTATR == 2)

# Save the filtered dataset
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(combined_data, "data/combined_data_filtered.Rds")


```

```{r}
# Load necessary libraries
library(tidyverse)

# Filter out subjects with RIDAGEYR == 80 while keeping combined_data_filtered
combined_data <- combined_data %>%
  filter(RIDAGEYR != 80)

# Save the updated filtered dataset
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(combined_data, "data/combined_data.Rds")


```

```{r}
# Load necessary libraries
library(tidyverse)

# Filter subjects aged between 21 and 79
combined_data <- combined_data %>%
  filter(RIDAGEYR >= 21 & RIDAGEYR <= 79)

# Save the updated filtered dataset
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(combined_data, "data/combined_data.Rds")



```

```{r}
# Load necessary libraries
library(tidyverse)

# Filter subjects aged between 21 and 79 and rename to clean_data
clean_data <- combined_data%>%
  filter(RIDAGEYR >= 21 & RIDAGEYR <= 79)

# Save the cleaned dataset
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(clean_data, "data/clean_data.Rds")


```

```{r}
# Load necessary libraries
library(tidyverse)

# Keep only the specified variables
clean_data <- clean_data %>%
  select(SEQN, RIAGENDR, RIDRETH1, DMDMARTZ, LBDLDL, BMXBMI)

# Save the updated dataset
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(clean_data, "data/clean_data.Rds")



```

```{r}
clean_data <- clean_data |> 
  mutate(SEQN = as.character(SEQN))
```

```{r}
# Load necessary libraries
library(tidyverse)

# Keep only the specified variables
clean_data <- clean_data %>%
  select(SEQN, RIAGENDR, RIDRETH1, DMDMARTZ, LBDLDL, BMXBMI)

# Save the updated dataset
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(clean_data, "data/clean_data.Rds")

```

```{r}
# Load necessary libraries
library(tidyverse)

# Rename selected variables
clean_data <- clean_data %>%
  rename(
    gender = RIAGENDR,
    race_ethnicity = RIDRETH1,
    marital_status = DMDMARTZ,
    LDL = LBDLDL,
    BMI = BMXBMI
  )

# Save the updated dataset as RDS
if (!dir.exists("data")) {
  dir.create("data")
}

saveRDS(clean_data, "data/clean_data.Rds")


```

```{r}
# Create the obesity variable
clean_data <- clean_data %>%
  mutate(obesity = if_else(BMI >= 30, 1, 0))

# Save the updated dataset
if (!dir.exists("data")) {
  dir.create("data")
}
saveRDS(clean_data, "data/clean_data.Rds")
```

```{r}
clean_data <- clean_data %>%
  mutate(
    LDL = as.numeric(LDL),
    BMI = as.numeric(BMI)
  )

# Save the updated dataset as RDS
if (!dir.exists("data")) {
  dir.create("data")
}

saveRDS(clean_data, "data/clean_data.Rds")
```

```{r}
# Convert selected variables to factors
clean_data <- clean_data %>%
  mutate(across(
    .cols = -c(SEQN, LDL, BMI),  # Exclude these columns
    .fns = as.factor             # Convert remaining variables to factors
  ))

# Save the updated dataset as RDS
if (!dir.exists("data")) {
  dir.create("data")
}

saveRDS(clean_data, "data/clean_data.Rds")
```

```{r}

# Recode variables
clean_data <- clean_data %>%
  mutate(
    # Recode gender
    gender = recode(gender, 
                    `1` = "Male", 
                    `2` = "Female"),
    
    # Recode race_ethnicity
    race_ethnicity = recode(race_ethnicity, 
                            `1` = "Mexican American", 
                            `2` = "Other Hispanic",
                            `3` = "Non-Hispanic White",
                            `4` = "Non-Hispanic Black",
                            `5` = "Other Race"),
    
    # Recode marital_status
    marital_status = recode(marital_status, 
                            `1` = "Married_Living with Partner",
                            `2` = "Widowed_Divorced_Separated",
                            `3` = "Never_married")
  )

# Save the updated dataset as RDS
if (!dir.exists("data")) {
  dir.create("data")
}

saveRDS(clean_data, "data/clean_data.Rds")

```

```{r}
# Recode obesity variable
clean_data <- clean_data %>%
  mutate(obesity = recode(obesity, 
                          `1` = "Obese", 
                          `0` = "Non-obese"))

# Save the updated dataset as RDS
if (!dir.exists("data")) {
  dir.create("data")
}

saveRDS(clean_data, "data/clean_data.Rds")


```

```{r}
# Filter out invalid values
clean_data <- clean_data %>%
  filter(!marital_status %in% c("77", "99")) %>%
  filter(!race_ethnicity %in% c("77", "99")) %>%
  mutate(
    marital_status = droplevels(marital_status),
    race_ethnicity = droplevels(race_ethnicity)
  )

# Save the updated dataset as RDS
if (!dir.exists("data")) {
  dir.create("data")
}

saveRDS(clean_data, "data/clean_data.Rds")



```

```{r}
# View summary of the dataset
summary(clean_data)
```

```{r}
clean_data <- readRDS("data/clean_data.Rds")
```

## B. Analysis 1: Compare Two Means/Medians Using Independent Samples

[Research Question:]{.underline} Is there a difference in mean LDL-C between males and females?

We will use the following code (graph first, then t-test):

```{r}

# Load necessary libraries
library(tidyverse)

# Create Boxplot with Smaller and More Subtle Dots
ggplot(clean_data, aes(x = gender, y = LDL, fill = gender)) +
  geom_boxplot(alpha = 0.7, outlier.color = "red", outlier.size = 2) +
  geom_jitter(aes(color = gender), width = 0.1, alpha = 0.2, size = 1) +
  scale_fill_brewer(palette = "Set2") +
  scale_color_brewer(palette = "Set2") +
  labs(
    title = "LDL Cholesterol by Gender",
    x = "Gender",
    y = "LDL Cholesterol (mg/dL)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    legend.position = "none"
  )

```

```{r}

# Descriptive Summary by Gender
summary_stats <- clean_data %>%
  group_by(gender) %>%
  summarise(
    mean_LDL = mean(LDL, na.rm = TRUE),
    sd_LDL = sd(LDL, na.rm = TRUE),
    median_LDL = median(LDL, na.rm = TRUE),
    n = n()
  )
print(summary_stats)

# Perform Independent Samples t-test with 90% CI
t_test_results <- t.test(LDL ~ gender, data = clean_data, 
                         var.equal = FALSE, conf.level = 0.90)

# Print t-test Results
print(t_test_results)

# Extract and Print the 90% Confidence Interval
conf_interval <- t_test_results$conf.int
message("90% Confidence Interval for the Difference in Means: ", 
        round(conf_interval[1], 2), " to ", round(conf_interval[2], 2))

```

As we can see from the graph and t-test, there is no significant difference in mean LDL between males and females.

## C. Analysis 2: Compare 3-6 Means/Medians Using Independent Samples

[Research Question:]{.underline} Is there a difference in mean LDL-C according to marital status?

We will use the following code (graph first, then ANOVA):

```{r, warning=FALSE, message=FALSE}
# Load necessary libraries
library(tidyverse)

# Create Boxplot with Smaller and More Subtle Dots
ggplot(clean_data, aes(x = marital_status, y = LDL, fill = marital_status)) +
  geom_boxplot(alpha = 0.7, outlier.color = "red", outlier.size = 2) +
  geom_jitter(aes(color = marital_status), width = 0.1, alpha = 0.2, size = 1) +
  scale_fill_brewer(palette = "Set2") +
  scale_color_brewer(palette = "Set2") +
  labs(
    title = "LDL Cholesterol by Marital Status",
    x = "Marital Status",
    y = "LDL Cholesterol (mg/dL)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text.x = element_text(size = 10, angle = 25, hjust = 1),
    axis.text.y = element_text(size = 12),
    legend.position = "none"
  )


```

```{r}
# Load necessary libraries
library(tidyverse)

# Perform One-Way ANOVA
anova_results <- aov(LDL ~ marital_status, data = clean_data)

# Display ANOVA Summary
summary(anova_results)

# Perform Tukey's Honest Significant Difference (HSD) Test
tukey_results <- TukeyHSD(anova_results, conf.level = 0.90)

# Display Tukey HSD Results
print(tukey_results)

```

The ANOVA results indicate a statistically significant difference in mean LDL levels across marital status groups (**p \< 0.001**). Post-hoc Tukey HSD tests reveal that individuals who are **Never married** have significantly lower mean LDL levels compared to both **Married/Living with Partner** and **Widowed/Divorced/Separated** groups, with **p \< 0.01** for both comparisons.

## D. Analysis 3: Create and analyze a 2×2 table

[Research Question]{.underline}: Is there an association between obesity status (obese vs. non-obese) and males/females?

Note: obesity is defined as BMI \>or=30.

We will use the following code (visualization first, then Chi Square):

```{r}
# Load necessary libraries
library(tidyverse)

# Create Stacked Bar Chart
ggplot(clean_data, aes(x = gender, fill = obesity)) +
  geom_bar(position = "fill", alpha = 0.8) +
  scale_y_continuous(labels = scales::percent_format()) +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Proportion of Obesity by Gender",
    x = "Gender",
    y = "Proportion",
    fill = "Obesity Status"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10)
  )

```

```{r}
obesity_gender_table <- table(clean_data$obesity, clean_data$gender)

# Convert the table to a data frame with percentages
obesity_gender_df <- as.data.frame(obesity_gender_table) %>%
  group_by(Var2) %>%  # Group by gender
  mutate(
    Percentage = Freq / sum(Freq) * 100
  )

# Display the table with counts and percentages
obesity_gender_df %>%
  rename(
    Obesity_Status = Var1,
    Gender = Var2,
    Count = Freq
  ) %>%
  arrange(Gender, Obesity_Status)
```

```{r}
# Create a contingency table
obesity_gender_table <- table(clean_data$obesity, clean_data$gender)

# Perform Chi-Square Test
chi_square_results <- chisq.test(obesity_gender_table)

# Display Chi-Square Test Results
print(chi_square_results)

```

The Chi-Square test results indicate a statistically significant association between obesity status and gender (**X² = 31.852**, **p \< 0.001**). This suggests that the distribution of obesity differs significantly between males and females (females tend to have a higher prevalence of obesity)

## E. Analysis 4: Create and analyze a J×K table, where 2≤J≤5 and 3≤K≤5

[Research Question]{.underline}: Is there an association between race/ethnicity and marital status (3 levels)?

We will use the following code (visualization first, then Chi Square statistical testing):

```{r}
# Load necessary libraries
library(tidyverse)

# Create Stacked Bar Chart
ggplot(clean_data, aes(x = race_ethnicity, fill = marital_status)) +
  geom_bar(position = "fill", alpha = 0.8) +
  scale_y_continuous(labels = scales::percent_format()) +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Marital Status by Race/Ethnicity",
    x = "Race/Ethnicity",
    y = "Proportion",
    fill = "Marital Status"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
    axis.title = element_text(size = 14),
    axis.text.x = element_text(size = 10, angle = 25, hjust = 1),
    axis.text.y = element_text(size = 12),
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10)
  )

```

```{r}

# Load necessary libraries
library(tidyverse)

# Remove missing values
clean_data <- clean_data %>%
  filter(!race_ethnicity %in% c("77", "99")) %>%
  filter(!marital_status %in% c("77", "99"))

# Create Contingency Table
race_marital_table <- table(clean_data$race_ethnicity, clean_data$marital_status)

# Convert Table to Data Frame
race_marital_df <- as.data.frame(race_marital_table) %>%
  group_by(Var1) %>%  # Group by race_ethnicity
  mutate(
    Percentage = Freq / sum(Freq) * 100
  )

# Display the Table with Counts and Percentages
race_marital_df %>%
  rename(
    Race_Ethnicity = Var1,
    Marital_Status = Var2,
    Count = Freq
  ) %>%
  arrange(Race_Ethnicity, Marital_Status) %>%
  mutate(
    Percentage = paste0(round(Percentage, 2), "%")
  )

```

```{r}
# Load necessary libraries
library(tidyverse)

# Create Contingency Table
race_marital_table <- table(clean_data$race_ethnicity, clean_data$marital_status)

# Perform Chi-Square Test
chi_square_results <- chisq.test(race_marital_table)

# Display Results
print("Chi-Square Test Results:")
print(chi_square_results)


```

The Chi-Square test results (**X² = 389.26**, **df = 8**, **p \< 0.001**) indicate a statistically significant association between **marital status** and **race/ethnicity**. This suggests that marital status distribution varies meaningfully across different racial/ethnic groups.

**#CODEBOOK**

|      Variable      | Old Name  |       Description        |
|:------------------:|:---------:|:------------------------:|
|      **SEQN**      |   SEQN    |            ID            |
|     **gender**     | RIAGENDER |       Male/Female        |
| **race_ethnicity** | RIDRETH1  |         5 levels         |
| **marital_status** | DMDMARTZ  |         3 levels         |
|      **LDL**       |  LBDLDL   | LDL-Cholesterol in mg/dl |
|      **BMI**       |  BMXBMI   |  Body mass index kg/m2   |
|    **obesity**     |    \-     | Defined as BMI \>or = 30 |
